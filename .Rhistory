install.packages("ggvis")
students <- data.frame(people=c("Lily", "Bo", "Jen", "Omar", "Sara", "Jack", "Ting"), team=c("Red", "Blue", "Green", "Red", "Blue", "Green", "Red"), number=c(1,2,3,5,2,7,1))
scores <- data.frame(team=c("Black", "Blue", "Green", "Indigo", "Orange", "Red", "Violet", "White", "Yellow"), score1=c(90,96,93,88,82,84,95,89,79), score2=c(5,5,4,4,5,3,5,5,3))
View(scores)
View(scores)
View(students)
View(students)
score1 <- rep(NA, 7)
View(scores)
View(scores)
score2 <- rep(NA, 7)
students <- data.frame(students, score1, score2)
View(students)
View(students)
students$score1 <- scores$score1[match(students$team, scores$team)]
students$score2 <- scores$score2[match(students$team, scores$team)]
View(students)
View(students)
View(scores)
View(scores)
View(students)
View(students)
Sys.getenv("QUANDL_AUTH_TOKEN")
require(Quandl)
auth_token <- Sys.getenv("QUANDL_AUTH_TOKEN")
Quandl.auth(auth_token)  # Your Quandl Auth Token Here
# Set the working directory
setwd("~/workspace/d3-project-folder/moebio-time-patterns")
SP500 <- read.csv(file="SP500_Companies.csv",head=TRUE,sep=",")
symbolList <- SP500$Symbol
# some crude error handling by removing problem symbols from the list
symbolList <- symbolList[symbolList != "BRK_B"]
symbolList <- symbolList[symbolList != "CTXS"]
symbolList <- symbolList[symbolList != "JOY"]
symbolList <- symbolList[symbolList != "NWSA"]
symbolList <- symbolList[symbolList != "NU"]
symbolList <- symbolList[symbolList != "PSX"]
symbolList <- symbolList[symbolList != "TRIP"]
data <- data.frame("Date" = c(),
"Effective Tax Rate" = c(),
"Earnings Before Interest and Taxes" = c(),
"symbol" = c())
for(symbol in symbolList){
effectiveTaxRate = try(Quandl(paste0("DMDRN/", symbol, "_EFF_TAX")), silent=FALSE)
EBIT = try(Quandl(paste0("DMDRN/", symbol, "_EBIT")), silent=FALSE)
tmp_data <- merge(effectiveTaxRate,EBIT,by=c("Date"))
tmp_data$symbol <- symbol
data <- rbind(data, tmp_data)
#plot the results of the API call as they are returned
#this shows the count of rows per symbol, where each row is a year
barplot(tail(table(data$symbol), 50))
}
# Write CSV in R
write.csv(data, file = "data.csv",row.names=FALSE, na="")
# Set the working directory
setwd("~/workspace/d3-project-folder/moebio-time-patterns")
# Set the working directory
setwd("~/workspace/d3-projects/moebio-time-patterns")
SP500 <- read.csv(file="SP500_Companies.csv",head=TRUE,sep=",")
symbolList <- SP500$Symbol
# some crude error handling by removing problem symbols from the list
symbolList <- symbolList[symbolList != "BRK_B"]
symbolList <- symbolList[symbolList != "CTXS"]
symbolList <- symbolList[symbolList != "JOY"]
symbolList <- symbolList[symbolList != "NWSA"]
symbolList <- symbolList[symbolList != "NU"]
symbolList <- symbolList[symbolList != "PSX"]
symbolList <- symbolList[symbolList != "TRIP"]
data <- data.frame("Date" = c(),
"Effective Tax Rate" = c(),
"Earnings Before Interest and Taxes" = c(),
"symbol" = c())
for(symbol in symbolList){
effectiveTaxRate = try(Quandl(paste0("DMDRN/", symbol, "_EFF_TAX")), silent=FALSE)
EBIT = try(Quandl(paste0("DMDRN/", symbol, "_EBIT")), silent=FALSE)
tmp_data <- merge(effectiveTaxRate,EBIT,by=c("Date"))
tmp_data$symbol <- symbol
data <- rbind(data, tmp_data)
#plot the results of the API call as they are returned
#this shows the count of rows per symbol, where each row is a year
barplot(tail(table(data$symbol), 50))
}
# Write CSV in R
write.csv(data, file = "data.csv",row.names=FALSE, na="")
require(Quandl)
auth_token <- Sys.getenv("QUANDL_AUTH_TOKEN")
Quandl.auth(auth_token)  # Your Quandl Auth Token Here
# Set the working directory
setwd("~/workspace/d3-projects/moebio-time-patterns")
SP500 <- read.csv(file="SP500_Companies.csv",head=TRUE,sep=",")
symbolList <- SP500$Symbol
# some crude error handling by removing problem symbols from the list
symbolList <- symbolList[symbolList != "BRK_B"]
symbolList <- symbolList[symbolList != "CTXS"]
symbolList <- symbolList[symbolList != "JOY"]
symbolList <- symbolList[symbolList != "NWSA"]
symbolList <- symbolList[symbolList != "NU"]
symbolList <- symbolList[symbolList != "PSX"]
symbolList <- symbolList[symbolList != "TRIP"]
data <- data.frame("Date" = c(),
"Effective Tax Rate" = c(),
"Earnings Before Interest and Taxes" = c(),
"symbol" = c())
for(symbol in symbolList){
Sys.sleep(2)
effectiveTaxRate = try(Quandl(paste0("DMDRN/", symbol, "_EFF_TAX")), silent=FALSE)
Sys.sleep(2)
EBIT = try(Quandl(paste0("DMDRN/", symbol, "_EBIT")), silent=FALSE)
tmp_data <- merge(effectiveTaxRate,EBIT,by=c("Date"))
tmp_data$symbol <- symbol
data <- rbind(data, tmp_data)
#plot the results of the API call as they are returned
#this shows the count of rows per symbol, where each row is a year
barplot(tail(table(data$symbol), 50))
}
# Write CSV in R
write.csv(data, file = "data.csv",row.names=FALSE, na="")
View(data)
